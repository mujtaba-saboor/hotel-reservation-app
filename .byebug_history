continue
params
continue
@user.confirmed_at
@user.confirmed_at=Time.now
@user.confirmed_at=time.now
@user.confirmed_at
@user.confirmed_a
@user.confirmed_at
@user
continue
params[:user][:role]
params[:user].role
params[:user]
params[:role]
params.role
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
@user
user_params
continue
@user.save(validate:false)
User.skip_callback(:save)
next
continue
@user.save(validate:false)
User.skip_callback(:save)
next
continue
@user.save
User.skip_callback(:save)
continue
@user.save
User.skip_callback(:save)
User.skip_callback
next
@user.toggle
continue
@user
current_user
@user
continue
@user.save.skip_callbacks
continue
@user
params
@user.save(validate: false)
@user.skip_some_callbacks = true
@user.skip_some_callbacks=true
@user.skip_callbacks=true
@user.update_columns(params)
@user.update_columns
params
continue
self
user
current_user
continue
self
continue
self
continue
self.role
continue
self.role
self
continue
self.id
self
continue
self.id
continue
self.id
continue
self.id
defined?self.id
self.id
continue
s.id.present?
self.id.present?
defined? self.id
defined? self
defined? seld
self
defined?
user
current_user?
current_user
continue
current_user
if defined? current_user
defined? current_user
defined?current_user
continue
next
@user
next
continue
user_params
continue
defined? current_user
current_user.present
current_user.present?
current.user.present?
continue
next
continue
next
continue
contiue
next
step
continue
resource.save(validate:false)
resource.save(:validate => false)
continue
resource
continue
resource.update_columns
resource.errors.full_messages
resource.errors
resource.save
resource.save.errors
resource.save
resource
resources
continue
params
resources
resource
continue
current_user.nil?
current_user.nil?!
current_user.nil?
defined? current_user
puts [1,2,3]
current_user.exist
current_user.exit
1.defined?
current_user.defined
current_user
current_user.defined?
end
if current_user;
end
if current_user
current_user
@user
user
continue
can? :manage,User
can? manage: User
can? manage: USer
can? manage
can?
continue
next
step
continue
@users.count
continue
next
step
continue
next
continue
next
continue
user.is?(':admin')
user.is?(:admin)
user.is?
user
next
step
continue
step
continue
user
next
continue
next
continue
params
paramms
id
continue
params[:id]
:id
id
params
continue
resource
params
continue
user
params[:id]
params
continue
@users
@users.count
continue
e.name
e.anme
e=@users.first
@users.first
continue
w.count
w=User.where('admin=0').paginate(page: params[:page])c
User.where('admin=0').paginate
User.where('admin=0').paginate'
User.where('admin=0').count
User.where('admin:0').count
User.where('admin:0')
continue
@users.count
@users,count
@users
continue
step
continue
next
continue
current_user.admin
current_user
continue
o.admin
o.class
o=current_user
current_user.admin
current_user
continue
next
params
sign_up_params
continue
next
step
next
step
sign_in_params
sign_up_params
step
params
c
params
continue
